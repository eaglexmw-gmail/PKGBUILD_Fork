diff -Nur old/src/extension/internal/pdfinput/pdf-parser.cpp new/src/extension/internal/pdfinput/pdf-parser.cpp
--- old/src/extension/internal/pdfinput/pdf-parser.cpp	2012-12-14 01:00:46.726633000 +0800
+++ new/src/extension/internal/pdfinput/pdf-parser.cpp	2015-01-02 21:48:09.259257000 +0800
@@ -861,7 +861,7 @@
 	  isolated = knockout = gFalse;
 	  if (!obj4.dictLookup(const_cast<char*>("CS"), &obj5)->isNull()) {
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
-	    blendingColorSpace = GfxColorSpace::parse(&obj5, NULL);
+	    blendingColorSpace = GfxColorSpace::parse((GfxResources*)&obj5, NULL, NULL, NULL, 0);
 #else
 	    blendingColorSpace = GfxColorSpace::parse(&obj5);
 #endif
@@ -1085,9 +1085,9 @@
   res->lookupColorSpace(args[0].getName(), &obj);
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
   if (obj.isNull()) {
-    colorSpace = GfxColorSpace::parse(&args[0], NULL);
+    colorSpace = GfxColorSpace::parse((GfxResources*)&args[0], NULL, NULL, NULL, 0);
   } else {
-    colorSpace = GfxColorSpace::parse(&obj, NULL);
+    colorSpace = GfxColorSpace::parse((GfxResources*)&obj, NULL, NULL, NULL, 0);
   }
 #else
   if (obj.isNull()) {
@@ -1120,9 +1120,9 @@
   res->lookupColorSpace(args[0].getName(), &obj);
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
   if (obj.isNull()) {
-    colorSpace = GfxColorSpace::parse(&args[0], NULL);
+    colorSpace = GfxColorSpace::parse((GfxResources*)&args[0], NULL, NULL, NULL, 0);
   } else {
-    colorSpace = GfxColorSpace::parse(&obj, NULL);
+    colorSpace = GfxColorSpace::parse((GfxResources*)&obj, NULL, NULL, NULL, 0);
   }
 #else
   if (obj.isNull()) {
@@ -1213,7 +1213,7 @@
     }
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
     if (args[numArgs-1].isName() &&
-	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL))) {
+	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL, NULL))) {
       state->setFillPattern(pattern);
       builder->updateStyle(state);
     }
@@ -1273,7 +1273,7 @@
     }
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
     if (args[numArgs-1].isName() &&
-	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL))) {
+	(pattern = res->lookupPattern(args[numArgs-1].getName(), NULL, NULL))) {
       state->setStrokePattern(pattern);
       builder->updateStyle(state);
     }
@@ -1711,7 +1711,7 @@
   GBool savedState = gFalse;
 
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
-  if (!(shading = res->lookupShading(args[0].getName(), NULL))) {
+  if (!(shading = res->lookupShading(args[0].getName(), NULL, NULL))) {
     return;
   }
 #else
@@ -2727,7 +2727,7 @@
     }
     if (!obj1.isNull()) {
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
-      colorSpace = GfxColorSpace::parse(&obj1, NULL);
+      colorSpace = GfxColorSpace::parse((GfxResources*)&obj1, NULL, NULL, NULL, 0);
 #else
       colorSpace = GfxColorSpace::parse(&obj1);
 #endif
@@ -2816,7 +2816,7 @@
 	}
       }
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
-      maskColorSpace = GfxColorSpace::parse(&obj1, NULL);
+      maskColorSpace = GfxColorSpace::parse((GfxResources*)&obj1, NULL, NULL, NULL, 0);
 #else
       maskColorSpace = GfxColorSpace::parse(&obj1);
 #endif
@@ -3007,7 +3007,7 @@
       transpGroup = gTrue;
       if (!obj1.dictLookup(const_cast<char*>("CS"), &obj3)->isNull()) {
 #if defined(POPPLER_NEW_COLOR_SPACE_API) || defined(POPPLER_NEW_ERRORAPI)
-	blendingColorSpace = GfxColorSpace::parse(&obj3, NULL);
+	blendingColorSpace = GfxColorSpace::parse((GfxResources*)&obj3, NULL, NULL, NULL, 0);
 #else
 	blendingColorSpace = GfxColorSpace::parse(&obj3);
 #endif
diff -Nur old/src/gc-core.h new/src/gc-core.h
--- old/src/gc-core.h	2012-02-14 11:22:17.670697000 +0800
+++ new/src/gc-core.h	2015-01-02 21:03:52.023652000 +0800
@@ -57,7 +57,7 @@
                                            CleanupFunc *old_func,
                                            void **old_data);
     int (*general_register_disappearing_link)(void **p_ptr,
-                                              void *base);
+                                              const void *base);
     int (*unregister_disappearing_link)(void **p_ptr);
     std::size_t (*get_heap_size)();
     std::size_t (*get_free_bytes)();
diff -Nur old/src/gc.cpp new/src/gc.cpp
--- old/src/gc.cpp	2012-02-14 11:22:17.670697000 +0800
+++ new/src/gc.cpp	2015-01-02 21:05:50.989674000 +0800
@@ -70,8 +70,8 @@
     return base + debug_base_fixup();
 }
 
-int debug_general_register_disappearing_link(void **p_ptr, void *base) {
-    char *real_base=reinterpret_cast<char *>(base) - debug_base_fixup();
+int debug_general_register_disappearing_link(void **p_ptr, const void *base) {
+    const char *real_base=reinterpret_cast<const char *>(base) - debug_base_fixup();
     return GC_general_register_disappearing_link(p_ptr, real_base);
 }
 
@@ -90,7 +90,7 @@
     }
 }
 
-int dummy_general_register_disappearing_link(void **, void *) { return false; }
+int dummy_general_register_disappearing_link(void **, const void *) { return false; }
 
 int dummy_unregister_disappearing_link(void **/*link*/) { return false; }
 
@@ -202,7 +202,7 @@
     die_because_not_initialized();
 }
 
-int stub_general_register_disappearing_link(void **, void *) {
+int stub_general_register_disappearing_link(void **, const void *) {
     die_because_not_initialized();
     return 0;
 }
diff -Nur old/src/libnrtype/FontFactory.h new/src/libnrtype/FontFactory.h
--- old/src/libnrtype/FontFactory.h	2015-01-02 23:54:07.208312254 +0800
+++ new/src/libnrtype/FontFactory.h	2015-01-02 23:52:10.032280384 +0800
@@ -31,7 +31,8 @@
 #include <pango/pangowin32.h>
 #else
 #include <pango/pangoft2.h>
-#include <freetype/freetype.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
 #endif
 
 namespace Glib
