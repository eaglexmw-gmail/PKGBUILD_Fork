# $Id$
# Maintainer: Alexandre Filgueira <alexfilgueira@antergos.com>

pkgbase=nemo-extensions
pkgname=('nemo-fileroller'
	 # 'nemo-preview'
	 'nemo-python'
	 'nemo-share' )
	# 'nemo-seahorse')
	#'nemo-media-columns'
	#'nemo-pastebin'
	#'nemo-compare'
	#'nemo-rabbitvcs'
pkgver=3.2.0
pkgrel=1
arch=('i686' 'x86_64' pentium4)
license=('GPL2')
url="https://github.com/linuxmint/nemo-extensions"
#depends=(nemo file-roller cjs clutter-gtk clutter-gst2 gst-plugins-good libmusicbrainz5
#         evince gtksourceview3 webkitgtk python2-gobject seahorse-nautilus samba)
#makedepends=(gconf gnome-common gtk-doc intltool gobject-introspection) # python2-distutils-extra
makedepends=(gnome-common gtk-doc intltool gobject-introspection) # python2-distutils-extra
options=('!emptydirs')
source=("${pkgbase}-${pkgver}.tar.gz::https://github.com/linuxmint/nemo-extensions/archive/refs/tags/${pkgver}.tar.gz" extern_def.patch)
sha256sums=('1536fd828b2ee0a8f194155a9e13b8cce937b403b5c87d8e579d7b1ced8d6d14' SKIP)

if [ "$CARCH" = "x86_64" ]; then
  dstdir=cinnamon64
  python2_bin=python2_64
elif [ "$CARCH" = "i686" ]; then
  dstdir=cinnamon
  python2_bin=python2
elif [ "$CARCH" = "pentium4" ]; then
  dstdir=cinnamon
  python2_bin=python2
fi

prepare() {
  cd ${pkgbase}-${pkgver}

  # Python2 fix
  find -type f | xargs sed -i 's@^#!.*python$@#!/usr/bin/env python2@'

  # Fix nemo-preview build
  # sed -i '/AM_GNU_GETTEXT/d' nemo-preview/configure.ac

  # GPG version in testing
  # patch -Np1 -i ../gpgversion.patch

  # patch -Np1 -i ../mod_path.patch
  
  patch -Np1 -i ../extern_def.patch

  # Fix path for nemo-python
  sed -i 's|libdirsuffix="/i386-linux-gnu/"|libdirsuffix=""|' nemo-python/m4/python.m4

}

build() {
  cd ${pkgbase}-${pkgver}

  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/usr/local/${dstdir}/lib/pkgconfig/

  # _configure_pkgs="nemo-fileroller nemo-seahorse nemo-share"
_configure_pkgs="nemo-fileroller nemo-share"
  for dir in ${_configure_pkgs}
  do
    pushd ${dir}
    autoreconf -fi
    PYTHON=/usr/local/${python2_bin}/bin/python2 ./configure --prefix=/usr/local/${dstdir} --sysconfdir=/usr/local/${dstdir}/etc --localstatedir=/var --libexecdir=/usr/local/${dstdir}/lib/${dir} \
                --disable-static --disable-schemas-compile
    make
    popd
  done

  # _autogen_pkgs="nemo-preview nemo-python"
  _autogen_pkgs="nemo-python"
  for dir in ${_autogen_pkgs}
  do
    pushd ${dir}
    ./autogen.sh --prefix=/usr/local/${dstdir} --sysconfdir=/usr/local/${dstdir}/etc --localstatedir=/var --libexecdir=/usr/local/${dstdir}/lib/${dir} \
                 --disable-static --disable-schemas-compile PYTHON=/usr/local/${python2_bin}/bin/python2
    make
    popd
  done

    # # nemo-pastebin
    # cd nemo-pastebin
    # python2 ./setup.py build --build-base ${srcdir}/build/ || return 1
    # cd ..

  	# nemo-media-columns
  	# Nothing to do here
  	# Required python2-pypdf from AUR

  	# nemo-compare
  	# cd nemo-compare

    # nemo-rabbitvcs
    # Nothing to do here

}

package_nemo-fileroller(){
  pkgdesc="File archiver extension for Nemo"
  depends=(nemo file-roller)

  cd ${pkgbase}-${pkgver}/nemo-fileroller
  make DESTDIR="${pkgdir}" install
}

package_nemo-preview(){
  pkgdesc=("GtkClutter and Javascript-based quick previewer for Nemo")
  depends=(nemo cjs clutter-gtk clutter-gst2 libmusicbrainz5 evince gtksourceview3 webkitgtk)

  cd ${pkgbase}-${pkgver}/nemo-preview
  make DESTDIR="${pkgdir}" install
}

package_nemo-python() {
  pkgdesc="Python2 binding for Nemo components"
  depends=(nemo python2-gobject)

  cd ${pkgbase}-${pkgver}/nemo-python
  make DESTDIR="${pkgdir}" install
}

package_nemo-seahorse(){
  pkgdesc="PGP encryption and signing extension for Nemo"
  depends=(nemo seahorse-nautilus)

  cd ${pkgbase}-${pkgver}/nemo-seahorse
  make DESTDIR="${pkgdir}" install

  # seahorse-tool is already in seahorse-nautilus package
  make -C data DESTDIR="${pkgdir}" uninstall
  make -C tool DESTDIR="${pkgdir}" uninstall
}

package_nemo-share(){
  pkgdesc="Samba extension for Nemo"
  depends=(nemo samba)

  cd ${pkgbase}-${pkgver}/nemo-share
  make DESTDIR="${pkgdir}" install
}

# package_nemo-media-columns(){
# 	cd ${pkgbase}-${pkgver}/nemo-media-columns

# 	pkgdesc=("A Nemo extension to display music/EXIF and PDF metadata info in the Nemo List View")
# 	arch=(any)

#   install -d ${pkgdir}/usr/local/${dstdir}/share/nemo-python/extensions/
# 	install -Dm755 ${srcdir}/nemo-media-columns.py \
# 			${pkgdir}/usr/local/${dstdir}/share/nemo-python/extensions/nemo-media-columns.py
# }

# package_nemo-pastebin(){
# 	cd ${pkgbase}-${pkgver}/nemo-pastebin

# 	pkgdesc="Nemo extension to send files to a pastebin"
# 	arch=(any)
# 	depends=(nemo pastebinit nemo-python)
#   install=nemo-pastebin.install

# 	python2 ./setup.py install --prefix=/usr --root=${pkgdir} \
# 		--no-compile -O0
# }

# package_nemo-compare() {
#   cd ${pkgbase}-${pkgver}/nemo-compare

#   pkgdesc="Context menu comparison extension for Nemo file manager"
#   depends=(python2 python2-xdg meld nemo-python)

#   install -d ${pkgdir}/usr/share/applications/
#   install -d ${pkgdir}/usr/share/nemo-compare/

#   install -Dm755 ${srcdir}/data/nemo-compare-preferences.desktop \
#                   /usr/share/applications/nemo-compare-preferences.desktop
#   install -Dm755 ${srcdir}/data/nemo-compare-notification \
#                   /usr/share/nemo-compare/nemo-compare-notification
#   install -Dm755 ${srcdir}/src/nemo-compare.py \
#                   /usr/share/nemo-compare/nemo-compare.py
#   install -Dm755 ${srcdir}/src/utils.py \
#                   /usr/share/nemo-compare/utils.py
#   install -Dm755 ${srcdir}/src/nemo-compare-preferences.py \
#                   /usr/share/nemo-compare/nemo-compare-preferences.py

# }

# package_nemo-rabbitvcs(){
# 	cd ${pkgbase}-${pkgver}/nemo-rabbitvcs

#   depends=(nemo-python python2-dbus)

#   install -d ${pkgdir}/usr/share/nemo-python/extensions/
#   install -Dm755 ${srcdir}/RabbitVCS.py \
#       ${pkgdir}/usr/share/nemo-python/extensions/RabbitVCS.py
# }

